(mac . '(l r)
	(js! memberExpression ,l ,r false))

(mac list '()
	(js! arrayExpression ,((. (. (Array) slice) call) arguments)))

(mac λ '(args body)
	(js! functionExpression
		null
		,((. args map) (js! identifier))
		(js! blockStatement
			,(list (js! returnStatement ,body)))))

(mac λ '(name args body)
	(js! functionDeclaration
		,name
		,((. args map) (js! identifier))
		(js! blockStatement
			,(list (js! returnStatement ,body)))))

(mac var '(name def)
	(js! variableDeclaration
		"var"
		,(list (js! variableDeclarator ,name ,def))))

(mac import '(name)
	`(var ,name (require (js! literal name))))